简单工厂模式, 不是23种设计模式的一种, 简单工厂模式就是通过给工厂传递参数, 来告诉工厂需要什么样的对象
工厂方法: 工厂方法, 是用来创建实例的, 不要和策略模式弄混了, 



 简单工厂：一个工厂类，一个产品抽象类。
 工厂方法：多个工厂类，一个产品抽象类。
 抽象工厂：多个工厂类，多个产品抽象类。



策略模式:   一个算法的执行, 里面的一些部分可能存在多种 策略可以选择,  所以就将策略 抽取出来,封装成一个一个的类, 在创建算法的上下文的时候, 直接通过参数传递进去
		在策略模式中，一般情况下都是上下文持有策略的引用，以进行对具体策略的调用


		-- 果然, 策略模式  和 简单工厂模式  是一个比较 容易的搭配

		
		定义算法步骤的时候,   可以给算法
		

		
简单工厂的应用场景: 简单工厂 需要一个接口  和 一个条件判断,


策略模式+简单工厂模式   如果策略是需要在程序中输入, 比如 :1. 众多用户, 根据会员卡, 判断打折力度	2. 排课算法, 根据课程种类的不同, 选择一个算法来进行排课
						策略模式 + 简单工厂模式, 势必会引入 if else, 此时可以使用注解 来处理   参照https://blog.csdn.net/u012124438/article/details/70039943
						
						
						
						
						