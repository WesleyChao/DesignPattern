package _07AdapterPattern;


/*
* 适配器模式
*主要解决：主要解决在软件系统中，常常要将一些"现存的对象"放到新的环境中，而新环境要求的接口是现对象不能满足的。
*关键代码：适配器继承或依赖已有的对象，实现想要的目标接口。
*
*使用场景：有动机地修改一个正常运行的系统的接口，这时应该考虑使用适配器模式。
*
* 因此如果不是很有必要，可以不使用适配器，而是直接对系统进行重构, 也就是说, 除非万不得已(老系统以及存在, 不能改变), 一般别用适配器模式
* 注意事项：适配器不是在详细设计时添加的，而是解决正在服役的项目的问题
* */
public class AdapterPatternDemo {
}
